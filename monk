#!/bin/bash
set -e

# Monk CLI - Standalone command-line interface for PaaS Backend API
# 
# Usage: monk <module> <operation> [args...]
#
# Examples:
#   monk data list account
#   monk meta list schema -e name
#   echo '{"name":"Test"}' | monk data create account
#
# Environment Variables:
#   CLI_BASE_URL - Target API server (default: http://localhost:3000)

# Get the directory of this script (CLI root) - handle symlinks
SCRIPT_PATH="${BASH_SOURCE[0]}"
# Resolve symlinks to get the real path
while [ -L "$SCRIPT_PATH" ]; do
    SCRIPT_DIR=$(cd "$(dirname "$SCRIPT_PATH")" && pwd)
    SCRIPT_PATH=$(readlink "$SCRIPT_PATH")
    # Handle relative symlinks (portable check)
    case "$SCRIPT_PATH" in
        /*) ;; # Absolute path, do nothing
        *) SCRIPT_PATH="$SCRIPT_DIR/$SCRIPT_PATH" ;;
    esac
done
CLI_ROOT="$(cd "$(dirname "$SCRIPT_PATH")" && pwd)"

# Change to CLI directory 
cd "$CLI_ROOT"

# Check if module is provided
if [ $# -eq 0 ]; then
    echo "Usage: monk <module> <operation> [args...]" >&2
    echo "Modules: auth, data, meta, find, ping, hono, test" >&2
    exit 1
fi

# Get the module and pass remaining args to the specific CLI script
MODULE="$1"
shift

case "$MODULE" in
    auth)
        exec "./cli/auth.sh" "$@"
        ;;
    data)
        exec "./cli/data.sh" "$@"
        ;;
    meta)
        exec "./cli/meta.sh" "$@"
        ;;
    find)
        exec "./cli/find.sh" "$@"
        ;;
    ping)
        exec "./cli/ping.sh" "$@"
        ;;
    hono)
        exec "./cli/hono.sh" "$@"
        ;;
    test)
        exec "./cli/test.sh" "$@"
        ;;
    *)
        echo "Invalid module: $MODULE" >&2
        echo "Available modules: auth, data, meta, find, ping, hono, test" >&2
        exit 1
        ;;
esac